import { ApolloGateway, IntrospectAndCompose } from '@apollo/gateway'
import {ApolloServer} from '@apollo/server'
import { startStandaloneServer } from '@apollo/server/standalone';
import { readFile } from 'fs/promises';
import { watch } from 'fs';

const server = new ApolloServer({
  gateway: new ApolloGateway({
    supergraphSdl: new IntrospectAndCompose({
      subgraphs: [
        { name: 'users', url: 'http://localhost:8000' },
        { name: 'products', url: 'http://localhost:7000' },
      ]
    }),
  })
});



const { url } = await startStandaloneServer(server, {
listen: { port: 10000 },
cors: {
    origin: ['http://localhost:10000', 'http://localhost:8000', 'http://localhost:7000'], // –£–∫–∞–∂–∏—Ç–µ –¥–æ–ø—É—Å—Ç–∏–º—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏
    methods: ['GET', 'POST', 'UPDATE', 'PUT', 'DELETE'], // –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã
    credentials: true // –ï—Å–ª–∏ –Ω—É–∂–µ–Ω –¥–æ—Å—Ç—É–ø –∫ –∑–∞—â–∏—â—ë–Ω–Ω—ã–º –∫—É–∫–∏
    }
})

console.log(`üöÄ  Server ready at: ${url}`);